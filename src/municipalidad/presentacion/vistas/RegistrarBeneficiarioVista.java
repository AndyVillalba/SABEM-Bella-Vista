/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package municipalidad.presentacion.vistas;

import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import municipalidad.dominio.Sexo;
import municipalidad.presentacion.interfaces.IRegistrarBeneficiarioVista;
import municipalidad.presentacion.presentadores.RegistrarBeneficiarioPresentador;

/**
 *
 * @author ramir
 */
public class RegistrarBeneficiarioVista extends javax.swing.JDialog implements IRegistrarBeneficiarioVista, ActionListener {

    private final RegistrarBeneficiarioPresentador presentador;
    private final PanelRegistracion panel = new PanelRegistracion();
    private boolean b = false;
    private Camara camara;

    /**
     * Creates new form RegistrarBeneficiarioVista
     */
    public RegistrarBeneficiarioVista(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.add(panel);
        agregarBotones();
        presentador = new RegistrarBeneficiarioPresentador(this);
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void setSexo(Sexo[] sexos) {
        DefaultComboBoxModel model = new DefaultComboBoxModel(sexos);
        panel.getCbxSexo().setModel(model);
    }

    @Override
    public void setDatosBeneficiarioExistente(String nombre, String apellido, String direccion, int telefono, Date fecNac, Sexo sexo, ImageIcon fotografia) {
        panel.getTxtApellido().setText(nombre);
        panel.getTxtNombre().setText(nombre);
        panel.getTxtDireccion().setText(direccion);
        panel.getTxtTelefono().setText(String.valueOf(telefono));
        panel.getCbxSexo().getModel().setSelectedItem(sexo);
        panel.getSpnDia().setValue(fecNac.getDay());
        panel.getSpnMes().setValue(fecNac.getMonth());
        panel.getSpnAnio().setValue(fecNac.getYear());
        panel.getLabelFotografia().setIcon(fotografia);

    }

    @Override
    public void actionPerformed(ActionEvent ae) {
        if (ae.getSource() == panel.getBtnBuscar()) {
            boolean iniciar = this.presentador.iniciarRegistracion(Integer.parseInt(panel.getTxtDni().getText()));
            if (iniciar) {
                panel.habilitarCampos();
            }
        }
        if (ae.getSource() == panel.getBtnCancelar()) {
            this.dispose();
        }
        if (ae.getSource() == panel.getBtnLimpiar()) {
            panel.limpiar();
        }
        if (ae.getSource() == panel.getBtnFotografia()) {
            camara = new Camara(this);
        }
        if (ae.getSource() == this.panel.getBtnConfirmar()) {
            this.presentador.setDatos(this.panel.getTxtApellido().getText(), this.panel.getTxtNombre().getText(), this.panel.getTxtDireccion().getText(), Integer.parseInt(panel.getTxtTelefono().getText()), (Sexo) panel.getCbxSexo().getSelectedItem(), (int) this.panel.getSpnDia().getValue(), (int) this.panel.getSpnMes().getValue(), (int) this.panel.getSpnAnio().getValue());
            this.presentador.tomarFotografia(this.panel.getLabelFotografia().getIcon());
            if (this.panel.verificarCamposCompletos()) {
                this.presentador.confirmarRegistracion();
                JOptionPane.showMessageDialog(null, "Nuevo beneficiario registrado.");
                AsignarBeneficioVista abv = new AsignarBeneficioVista(this, true, panel.getDniIngresado());
                panel.limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Faltan datos por completar.");
            }
        }
    }

    public void mostrarFotografiaTomada(Image imagen) {
        panel.mostrarFotografiaTomada(adaptarImagen(imagen));
        presentador.tomarFotografia(adaptarImagen(imagen));
    }

    private void agregarBotones() {
        panel.getBtnBuscar().addActionListener(this);
        panel.getBtnFotografia().addActionListener(this);
        panel.getBtnCancelar().addActionListener(this);
        panel.getBtnLimpiar().addActionListener(this);
        panel.getBtnConfirmar().addActionListener(this);
    }

    private Icon adaptarImagen(Image imagen) {
        ImageIcon icon = new ImageIcon(imagen);
        Icon fotografia = new ImageIcon(icon.getImage().getScaledInstance(panel.getLabelFotografia().getWidth(), panel.getLabelFotografia().getHeight(),
                Image.SCALE_DEFAULT));
        return fotografia;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
